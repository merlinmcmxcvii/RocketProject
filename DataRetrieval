# -*- coding: utf-8 -*-

import numpy
import pylab

filename = raw_input('Please type in the name of the data file you wish to use:  ')
if filename[-4:] != '.txt' :
  print('\n You forgot to include the .txt file extension in your filename!  \n But, don\'t worry, the program was written to automatically add it ;) \n')
  filename += '.txt'

f = open(filename, 'r')

header1 = f.readline()

x = []
y = []
z = []


for line in f:
    if line[0][0].isdigit():     
      columns = line.split()
      x.append(int(columns[2].strip(",")))  
      y.append(int(columns[3].strip(",")))
      z.append(int(columns[4]))
    else:
      print(' There is a blackout after the '+ str(len(x)) +'th data point')
#      break     

f.close()

print('\n Your data file included '+ str(len(x)) +' timestamps,') 
print(' which at 100Hz data rate is about '+ str((len(x))/100) +' seconds of measuring time.') 

data_rate_string = raw_input('Please type in the data rate that your accelerometer used (either 100 Hz or 200 Hz):     ')
datarate = 100*int(data_rate_string[0])  # this simply reads in the first digit that you typed and multiplies by 100 for the data rate in Hz

time = numpy.arange(len(x), dtype='d') / datarate  #  divides by 100 if it's a 100Hz data rate, or 200 for 200Hz

acc_vectors = [numpy.array(x,dtype='i'), numpy.array(y,dtype='i'), numpy.array(z,dtype='i')]  
xx = numpy.array(x,dtype='i')
yy = numpy.array(y,dtype='i')
zz = numpy.array(z,dtype='i')

ax2=pylab.subplot(3,1,1)
pylab.plot(time,xx,'k*')
pylab.xlabel('time (s)')
pylab.ylabel('velocity (m/s)')

ax2=pylab.subplot(3,1,2)
pylab.plot(time,yy,'k*')
pylab.xlabel('time (s)')
pylab.ylabel('velocity (m/s)')

ax2=pylab.subplot(3,1,3)
pylab.plot(time,zz,'k*')
pylab.xlabel('time (s)')
pylab.ylabel('velocity (m/s)')
# Display the figure:
pylab.show()

array_to_save = numpy.array([ time , acc_vectors[2] ]).T   #numpy has a transpose feature which turns rows into columns.  With this command we only take the z-axis acceleration
numpy.savetxt('time-zacc_data.txt', array_to_save, header='time, z_acc')
